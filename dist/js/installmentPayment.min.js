webpackJsonp([0,1],[
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	var pview = __webpack_require__(1);
	var CMethod = __webpack_require__(2);
	var num = __webpack_require__(3);
	var isPaySure, needFeeRate, stageNumber;
	var exp;
	var rexp = false; // 表示有效期是否大于现在
	CMethod.QueryString.Initial();
	$(document).ready(function() {
	    initValue();
	    computesEachPayNumber();
	    $vform = pview.initValidform();
	    initHeaderSpan();
	    initCreditCard();
	    initUserIdEvent();
	    initCvn2Event();
	    initPhoneEvent();
	    initSelectMonth();
	    $('#toFill').on("click", showFill);
	    $('#selectBalance').on('click', pview.selectBalance);
	    $('#sureButton').on('click', sureButtonClick);
	    $('#captchaImg').on('click', refreshCaptcha);
	    $('#verifyCode').on('keyup', verifyCode);
	    $('#verifyCode').blur(function() {
	        if ($(this).val().length < 4) {
	        }
	    });
	    $("#qrzfMoal button").on("click", function() {
	        $('#qrzfMoal').modal('hide');
	        if ($(this).data().accede == "ok") {
	            pay();
	        }
	    });
	    $("#rateSelect").on("change", rateSelectChange)

	});


	/* 确认支付事件 */
	function sureButtonClick() {

	    var vfcheck = $vform.check();
	    if(!rexp){
	        $("#timeCheckTip").text("信用卡有效期错误").removeClass("Validform_right").addClass("Validform_wrong");
	    }
	    // var _this = $(this), result = confirm('确认支付?');
	    if (vfcheck && rexp) {
	        $('#qrzfMoal').modal('show');
	    }
	}

	function pay() {
	    var parms = [{
	        name: 'card_id',
	        value: $("#cardNum").val()
	    }, {
	        name: 'password',
	        value: $("#cardPassword").val()
	    }, {
	        name: 'order_id',
	        value: id
	    }, {
	        name: 'verifyCode',
	        value: $("#verifyCode").val()
	    }];

	    pview.showZhifuTishi();
	    CMethod.getUrlAjax("/assetbm/rest/card/orderpay/pay", parms, successCallBack);
	}
	// 请求支付返回数据回调函数
	function successCallBack(msg) {
	    console.dir(msg);
	    // alert(msg.ppcs_paywithpassword_add_response.pay_result.resp_desc);
	    var code;
	    if (msg.error_business_response) {
	        // 错误码
	        code = msg.error_business_response.code;
	    } else {
	        //ppcs_paywithpassword_add_response为支付成功
	        code = msg.ppcs_paywithpassword_add_response.pay_result.resp_code;
	    }
	    alert(code);
	    // 支付成功返回码位000，其他均为支付失败
	    if (code == "0000") { // 
	        pview.setSucceedContent();
	    } else {
	        pview.showErroPrompt(code);
	        pview.showCardInfo();

	    }
	}

	// 初始化变量
	function initValue() {
	    $rateSpan = $("#rateSpan");
	    $rateSelect = $("#rateSelect");
	    if ($rateSelect[0]) {
	        needFeeRate = parseFloat($rateSelect.val());
	        stageNumber = parseInt($rateSelect.find("option:selected").text());
	    } else {
	        needFeeRate = parseFloat($rateSpan.attr("data-rate"));
	        stageNumber = parseFloat($rateSpan.text());
	    }

	}

	// 显示信息填写页面
	function showFill() {
	    pview.showCardInfo();
	    pview.addBadgeChecked(2);
	}

	// 给步骤绑定事件
	function initHeaderSpan() {
	    $(".cardInfo-header>span:eq(1)").on("click", showFill);
	    $(".cardInfo-header>span:eq(0)").on("click", function() {
	        pview.showCountBox();
	        pview.addBadgeChecked(1);
	    });

	}

	/* 验证码校验 */
	function verifyCode() {
	    if ($(this).val().length == 4) {
	        var parameters = {
	            code: $(this).val()
	        }

	        //验证发送请求后台
	        $.get("/assetbm/rest/card/orderpay/pay", parameters, function(data) {
	            if (data.code == "ok") {
	                // 验证正确时
	                verifyCodeOk();
	            } else {
	                // 验证码错误时
	                noVerfyCode();
	            }
	        });
	    }

	}

	/* 验证码通过提示 */
	function verifyCodeOk() {
	    $("#yzmti").text("验证码验证通过").removeClass("Validform_wrong").addClass("Validform_right");
	}

	/* 验证码错误提示 */
	function noVerfyCode() {
	    $("#yzmti").text("验证码错，请重新输入").removeClass("Validform_right").addClass("Validform_wrong");
	    $("#verifyCode").val("");
	    rvi();
	}

	/* 取验证码图*/
	function refreshCaptcha() {
	    var src = "/assetbm/commons/verfiy-code.jpg?" + Math.floor(Math.random() * 100) + "&orderId=${payOrder.orderId}";
	    $('#captchaImg').hide().attr('src', src).fadeIn();
	}

	// 计算总金额，和每期金额
	function computesEachPayNumber() {
	    var lfq_amt = parseFloat($("#totalNum").text());
	    var contentMonet = parseFloat(lfq_amt * (parseFloat(needFeeRate) / 100) + 0.00001 + lfq_amt).toFixed(2);
	    var eachMoney = num.hold2bit(parseFloat(lfq_amt) * (1 + needFeeRate / 100) / stageNumber);
	    var eachPrincipal = num.hold2bit(lfq_amt / stageNumber);
	    var eachFeeNum = parseFloat(eachMoney) - parseFloat(eachPrincipal);

	    $("#eachFeeNum").text(eachFeeNum.toFixed(2));
	    $("#eachMoney").text(eachMoney);
	    $("#countMoney").text(contentMonet);
	}

	//  分期数选择改变
	function rateSelectChange() {
	    needFeeRate = parseFloat($rateSelect.val());
	    stageNumber = parseInt($rateSelect.find("option:selected").text());
	    computesEachPayNumber();
	}

	// 银行卡事件
	function initCreditCard() {
	    $("#creditCard").keyup(function() {
	        var numberVal = $(this).val().replace(/[^0-9\s]/g, "");
	        $(this).val(numberVal);
	        pview.spaceCardNum();
	    });
	}

	// 身份证输入框事件
	function initUserIdEvent() {
	    $("#userId").keyup(function() {
	        $userId = $(this);
	        var useIdVal = $userId.val().replace(/[^0-9xX\s]/g, "");
	        $userId.val(useIdVal);
	        pview.spaceuserId($userId);
	    })
	}

	// cvn2输入框事件
	function initCvn2Event() {
	    $("#cvn2").keyup(function() {
	        if($(this).val().length > 3){
	            $(this).val($(this).val().substr(0,3));
	        }
	    })
	}

	// 手机输入事件
	function initPhoneEvent() {
	    $("#userPhone").keyup(function() {
	        $phone = $(this);
	        var phoneVal = $phone.val().replace(/[^0-9\s]/g, "");
	        $phone.val(phoneVal);
	        pview.spacePhoneNum($phone);
	    });
	}

	// 有效期
	function initSelectMonth() {
	    var $datePicker = pview.setDatetimepicker();
	    $datePicker.on("changeMonth", function(ev) {
	        var nowDate = new Date();
	        var year2 = String(ev.date.getFullYear()).substr(2, 2);
	        var months = ev.date.getMonth() + 1;
	        exp = year2 + months;

	        if (ev.date.getTime() < nowDate.getTime()) {
	            
	            $("#timeCheckTip").text("信用卡已过期").removeClass("Validform_right").addClass("Validform_wrong");
	        } else {
	            rexp = true;
	            $("#timeCheckTip").text("通过信息验证").removeClass("Validform_wrong").addClass("Validform_right");

	        }
	    });
	}

/***/ },
/* 1 */
/***/ function(module, exports) {

	//查看卡内余额
	function selectBalance(e) {
	    var balanceHTML = '<p>您的卡内余额：' + 200.00 + '元</p>';
	    $('#aboutMoal h4').text("查看卡内余额");
	    $('#aboutMoal .modal-body').html(balanceHTML);
	    $('#aboutMoal modal-footer > button').text('确定');
	    $('#aboutMoal').modal('show');
	}

	// 隐藏标签
	function addClassHide(selectors) {
	    for (var i = 0, l = selectors.length; i < l; i++) {
	        $(selectors[i]).addClass("hide");
	    }
	}

	/* 支付请求等待提示 */
	function showZhifuTishi() {
	    addClassHide(["#cardInfo", "#paySucceed", "#countBox"]);
	    $('#zhifuzhongtishu').removeClass("hide");
	}

	// 显示卡信息
	function showCardInfo() {
	    addClassHide(["#zhifuzhongtishu", "#paySucceed", "#countBox"]);
	    $("#cardInfo").removeClass("hide");

	}

	// 显示测算栏
	function showCountBox() {
	    addClassHide(["#zhifuzhongtishu", "#paySucceed", "#cardInfo"]);
	    $("#countBox").removeClass("hide");
	}

	/* 支付成功 */
	function showPaySucceed(payNum) {
	    addClassHide(["#zhifuzhongtishu", "#cardInfo", "#countBox"]);
	    $('#paySucceed').removeClass('hide');
	    $('.cardInfo-header .badge').addClass('checked');
	    countdownFun();
	}

	/* 设置成功提示 */
	function setSucceedContent() {
	    $("#paySucceed .icon-fail").removeClass("icon-fail").addClass("icon-chenggong");
	    $("#payFinally").text("您已成功付款");
	    $("#payFinally+span").show();
	    showPaySucceed();
	}
	/* 设置失败提示 */
	function setFailContent() {
	    $("#paySucceed .icon-chenggong").removeClass("icon-chenggong").addClass("icon-fail");
	    $("#payFinally").text("支付失败");
	    $("#payFinally+span").hide();
	    showPaySucceed();
	}

	// 点亮前两步骤图标
	function addBadgeChecked(stepNum) {
	    $badge = $('.cardInfo-header .badge');
	    for (var i = 0, l = $badge.length; i < l; i++) {
	        if (i < stepNum) {
	            $($badge[i]).addClass("checked");
	        } else {
	            $($badge[i]).removeClass("checked");
	        }
	    }
	}

	// 倒计时
	function countdownFun(argument) {
	    var cardNum = 10;
	    var setIntervalObje = setInterval(function cd10() {
	        cardNum--;
	        $('#countdown10').text(cardNum);
	        if (cardNum == 0) {
	            location.href = $("#paySucceed a").attr("href");
	            clearInterval(setIntervalObje);
	        };
	    }, 1000)
	}

	/* 展示错误提示框 */
	function showErroPrompt(promptCode) {
	    var promptHTML = '';
	    cardNum
	    if (promptCode == "cardNum") {
	        promptHTML = '<p>请输入正确卡号。</p>';
	    } else if (promptCode == "cardPassword") {
	        promptHTML = '<p>请输入6位密码。</p>';
	    } else if (promptCode == "verifyCodeErro") {
	        promptHTML = '<p>请输入4位验证码。</p>';
	    } else if (promptCode == "1118") {
	        promptHTML = '<p>卡号不存在，请重新输入。</p>';
	    } else if (promptCode == "1041") {
	        promptHTML = '<p>密码错误，请重新输入。</p>';

	        //   $("#cardPassword").val("");
	    } else if (promptCode == "60") {

	    } else if (promptCode == "60") {
	        promptHTML = '<p>验证码错误,请输入正确验证码</p>';
	    } else if (promptCode == "1039") {
	        promptHTML = '<p>密码超过日限制</p>';
	    } else if (promptCode == "50") {
	        promptHTML = '<p>单号不存在</p>';
	    } else if (promptCode == "1073") {
	        promptHTML = '<p>卡内余额不足，請充值</p>';
	    }
	    $('#aboutMoal h4').text("提示");
	    $('#aboutMoal .modal-body').html(promptHTML);
	    $('#aboutMoal modal-footer > button').text('确定');
	    $('#aboutMoal').modal('show');
	    $('#verifyCode').val("").focus();
	    refreshCaptcha();
	}

	/* 输入框输入去掉提示颜色 */
	function changeInputColor($input) {
	    if ($input.val() != "") {
	        $input.removeClass("tishu-color9");
	    }
	}


	/* 间隔信用卡号 */
	function spaceCardNum() {
	    $creditCard = $("#creditCard"),
	        creditCardVal = $creditCard.val(),
	        needCardVal = $creditCard.val().replace(/ /g, "");
	    if (needCardVal.length == 5) {
	        creditCardVal = needCardVal.substr(0, 4) + "  " + needCardVal.substr(4);
	        $creditCard.val(creditCardVal);
	    } else if (needCardVal.length == 9) {
	        creditCardVal = needCardVal.substr(0, 4) + "  " + needCardVal.substr(4, 4) + "  " + needCardVal.substr(8);
	        $creditCard.val(creditCardVal);
	    } else if (needCardVal.length == 13) {
	        creditCardVal = needCardVal.substr(0, 4) + "  " + needCardVal.substr(4, 4) + "  " + needCardVal.substr(8, 4) + "  " + needCardVal.substr(12);
	        $creditCard.val(creditCardVal);
	    }
	    
	}

	/* 间隔身份证号 */
	function spaceuserId($userId) {
	    var userIdVal = $userId.val(),
	        needUserIdVal = $userId.val().replace(/ /g, "");
	    if (needUserIdVal.length == 7) {
	        userIdVal = needUserIdVal.substr(0, 6) + "  " + needUserIdVal.substr(6);
	        $userId.val(userIdVal);
	    } else if (needUserIdVal.length == 15) {
	        userIdVal = needUserIdVal.substr(0, 6) + "  " + needUserIdVal.substr(6, 8) + "  " + needUserIdVal.substr(14);
	        $userId.val(userIdVal);
	    }
	    
	}

	/* 间隔手机号 */
	function spacePhoneNum($userPhone) {
	    var userPhoneVal = $userPhone.val(),
	        needPhoneVal = $userPhone.val().replace(/ /g, "");
	    if (needPhoneVal.length == 4) {
	        userPhoneVal = needPhoneVal.substr(0, 3) + "  " + needPhoneVal.substr(3);

	    } else if (needPhoneVal.length == 8) {
	        userPhoneVal = needPhoneVal.substr(0, 3) + "  " + needPhoneVal.substr(3, 4) + "  " + needPhoneVal.substr(7);
	    }
	    $userPhone.val(userPhoneVal);
	}

	// 初始化提示插件
	function initValidform() {
	    return $(".demoform").Validform({
	        tiptype: 2,
	        datatype: {
	            "zh2-15": /^[\u4E00-\u9FA5\uf900-\ufa2d]{2,15}$/,
	            "xk16": /[0-9]{4}\s\s[0-9]{4}\s\s[0-9]{4}\s\s[0-9]{4}$/,
	            "sfz": /[0-9]{6}\s\s[0-9]{8}\s\s[0-9]{3}[0-9Xx]$/,
	            "sjh": /[0-9]{3}\s\s[0-9]{4}\s\s[0-9]{4}$/
	        }
	    });
	}

	// 实例化日历控件
	function setDatetimepicker() {
	    $.fn.datetimepicker.dates['zh'] = {
	        days: ["星期日", "星期一", "星期二", "星期三", "星期四", "星期五", "星期六", "星期日"],
	        daysShort: ["日", "一", "二", "三", "四", "五", "六", "日"],
	        daysMin: ["日", "一", "二", "三", "四", "五", "六", "日"],
	        months: ["一月", "二月", "三月", "四月", "五月", "六月", "七月", "八月", "九月", "十月", "十一月", "十二月"],
	        monthsShort: ["一月", "二月", "三月", "四月", "五月", "六月", "七月", "八月", "九月", "十月", "十一月", "十二月"],
	        meridiem: ["上午", "下午"],
	        //suffix:      ["st", "nd", "rd", "th"],  
	        today: "今天"
	    };


	    var $datePicker = $('.form_month').datetimepicker({
	        //        language: 'fr',
	        language: 'zh',
	        weekStart: 1,
	        autoclose: 1,
	        startView: 3,
	        minView: 3,
	        forceParse: 0
	    });
	    return $datePicker;
	}



	/* 设置订单信息 
	function setOrderIfo(orderIfo) {
	    if (orderIfo.payments) { // 订单金额
	        $("#totalNum").text(orderIfo.payments + '元');
	    }
	    if (orderIfo.orderNum) { // 订单号
	        $("#orderNum").text(orderIfo.orderNum);
	    }
	    if (orderIfo.orderTime) { // 订单时间
	        $("#payDate").text(orderIfo.orderTime);
	    }
	    if (orderIfo.commodityName) { // 订单时间
	        $("#commodityName").text(orderIfo.commodityName);       
	    }
	}
	*/
	// 不打包形式  要加载requrie.js
	/*require.register("../views/paymentView.js", function(module, exports, require) {
	    module.exports = {
	        selectBalance: selectBalance,
	        showZhifuTishi: showZhifuTishi,
	        showCardInfo: showCardInfo,
	        showPaySucceed: showPaySucceed,
	        showErroPrompt: showErroPrompt,
	        changeInputColor: changeInputColor,
	        setSucceedContent: setSucceedContent,
	        setFailContent: setFailContent
	            // setOrderIfo: setOrderIfo
	    };
	});
	*/

	// 打包形式
	module.exports = {
	    selectBalance: selectBalance,
	    showCountBox: showCountBox,
	    showZhifuTishi: showZhifuTishi,
	    showCardInfo: showCardInfo,
	    showPaySucceed: showPaySucceed,
	    showErroPrompt: showErroPrompt,
	    changeInputColor: changeInputColor,
	    setSucceedContent: setSucceedContent,
	    setFailContent: setFailContent,
	    addBadgeChecked: addBadgeChecked,
	    spaceCardNum: spaceCardNum,
	    spaceuserId: spaceuserId,
	    spacePhoneNum: spacePhoneNum,
	    initValidform: initValidform,
	    setDatetimepicker: setDatetimepicker
	}

/***/ },
/* 2 */
/***/ function(module, exports) {

	// 获取url参数
	var QueryString = {
	    data: {},
	    Initial: function() {
	        var aPairs, aTmp;
	        var queryString = new String(window.location.search);
	        queryString = queryString.substr(1, queryString.length);
	        aPairs = queryString.split("&");
	        for (var i = 0; i < aPairs.length; i++) {
	            aTmp = aPairs[i].split("=");
	            this.data[aTmp[0]] = aTmp[1];
	        }
	    },
	    GetValue: function(key) {
	        return this.data[key];
	    }
	}


	function getUrlAjax(url, param, successCallBack,errorCallBack) {
	    $.ajax({
	        type: 'post',
	        dataType: "json",
	        url: url,
	        data: param,
	        cache: false,
	        async: false,
	        contentType: "application/x-www-form-urlencoded; charset=UTF-8",
	        success: successCallBack,
	        error: errorCallBack
	    });
	}

	// 转换时间格式 为2016-04-05 09:26:26
	function changeTimeFormat(cxinfo_trans_time) {
	    var trans_time = String(cxinfo_trans_time);
	    trans_time_year = trans_time.substr(0, 4),
	        trans_time_month = trans_time.substr(4, 2),
	        trans_time_date = trans_time.substr(6, 2),
	        trans_time_hour = trans_time.substr(8, 2),
	        trans_time_minutes = trans_time.substr(10, 2);
	    //       trans_time_seconds = trans_time.substr(12, 2);
	    var trans_time = trans_time_year + "-" + trans_time_month + "-" + trans_time_date + " " + trans_time_hour + ":" + trans_time_minutes;
	    return trans_time;
	}



	// 不打包形式  要加载requrie.js
	/*require.register("../componests/commonMethod.js", function(module, exports, require) {
	    module.exports = {
	        QueryString: QueryString,
	        changeTimeFormat: changeTimeFormat,
	        getUrlAjax: getUrlAjax
	    }
	});
	*/

	// 打包形式
	module.exports = {
	    QueryString: QueryString,
	    changeTimeFormat: changeTimeFormat,
	    getUrlAjax: getUrlAjax
	}


/***/ },
/* 3 */
/***/ function(module, exports) {

	// 清除"数字"和"."以外的字符
	function clearNoNum(obj) {
	    obj.value = parseFloat(obj.value.replace(/[^\d.]/g, "")); //清除"数字"和"."以外的字符
	    obj.value = obj.value.replace(/^\./g, ""); //验证第一个字符是数字而不是
	    obj.value = obj.value.replace(/\.{2,}/g, "."); //只保留第一个. 清除多余的
	    obj.value = obj.value.replace(".", "$#$").replace(/\./g, "").replace("$#$", ".");
	    obj.value = obj.value.replace(/^(\-)*(\d+)\.(\d\d).*$/, '$1$2.$3'); //只能输入两个小数
	}

	// 把输入的大于可输入的最大值时，替换成最大值
	function monreMax(obj, max) {
	    inputValue = obj.value;
	    if (parseFloat(inputValue) > parseFloat(max)) {
	        obj.value = max;
	    }
	}

	// 保留两位小数
	function input2bit(obj) {
	    if (obj.value.search(/\.\d{3,}/) != -1) {
	        clearNoNum(obj);
	    }
	}

	// 禁止数字和.以外的字符输入
	function deleteNoNumber(obj) {
	    var reg = /[^\d.]/;
	    if (reg.test(obj.value) || obj.value == "") {
	        obj.value = obj.value.replace(/[^\d.]/g, "");
	    }
	}

	// 截取两位小数
	function hold2bit(theNum) {
	    var theNum2bit = String(theNum);
	    if(String(theNum).match(/[0-9,]{0,}\.\d\d/)){
	        theNum2bit = String(theNum).match(/[0-9,]{0,}\.\d\d/)[0];
	    }else if(String(theNum).match(/[0-9,]{0,}\.\d/)){
	        theNum2bit += '0';
	    }else if(String(theNum).match(/[0-9,]{0,}\./)){
	        theNum2bit += '00';
	    }else if(String(theNum).match(/[0-9,]{0,}/)){
	        theNum2bit += '.00';
	    }
	    return theNum2bit;
	}



	// 打包形式

	module.exports = {
	    clearNoNum: clearNoNum,
	    monreMax: monreMax,
	    input2bit: input2bit,
	    deleteNoNumber: deleteNoNumber,
	    hold2bit: hold2bit
	}

/***/ }
]);