webpackJsonp([0],[
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	var pview = __webpack_require__(1);
	var CMethod = __webpack_require__(2);
	var num = __webpack_require__(3);
	var ucookies = __webpack_require__(4);
	var isPaySure, needFeeRate, stageNumber;
	var exp;
	var rexp = false; // 表示有效期是否大于现在
	var tooken;
	var getVerifyCodeDJS = 60;
	CMethod.QueryString.Initial();
	$(document).ready(function() {
	    getBrowserInfo();
	    initValue();
	    computesEachPayNumber();
	    $vform = pview.initValidform();
	    initHeaderSpan();
	    initCreditCard();
	    initUserIdEvent();
	    initCvn2Event();
	    initPhoneEvent();
	    initSelectMonth();
	    initState();
	    $('#toFill').on("click", sentOrderInfos);
	    $('#selectBalance').on('click', pview.selectBalance);
	    $('#sureButton').on('click', sureButtonClick);
	    $('#vCodeButton').on('click', getVerifyCode);
	    $('#verifyCode').on('keyup', verifyCode);
	    $('#verifyCode').blur(function() {

	    });
	    $("#rateSelect").on("change", rateSelectChange)
	   
	    pview.initSpace();
	    setReadOnly();
	    setBackUrl();
	    countDownTime();
	});


	/* 确认支付事件 */
	function sureButtonClick() {
	    var vfcheck = $vform.check();
	    if (!rexp) {
	        $("#timeCheckTip").text("信用卡有效期错误").removeClass("Validform_right").addClass("Validform_wrong");
	    }
	    // var _this = $(this), result = confirm('确认支付?');
	    if (vfcheck && rexp) {
	        $('#loding').modal({
	            backdrop: "static",
	            keyboard: false
	        });
	        setTimeout(function() {
	            pay();
	        }, 500);

	    }
	}

	// 拼接请求参数
	function getParms() {
	    var userName = $("#userName").val();
	    var userId = $("#userId").val().replace(/ /g, "");
	    var CardNum = $("#creditCard").val().replace(/ /g, "");

	    var parameters = [{
	        name: "phoneNo",
	        value: $("#userPhone").val().replace(/ /g, "")
	    }, {
	        name: "creditName",
	        value: userName
	    }, {
	        name: "idno",
	        value: userId
	    }, {
	        name: "creditNo",
	        value: CardNum
	    }, {
	        name: "cvn2",
	        value: $("#cvn2").val()
	    }, {
	        name: "exp",
	        value: exp
	    }, {
	        name: "servlet_type",
	        value: "create_order"
	    }, {
	        name: "verifyCode",
	        value: $("#verifyCode").val()
	    }, {
	        name: "orderId",
	        value: $("#orderId").val()
	    }, {
	        name: "sign",
	        value: $("#signs").val()
	    }, {
	        name: "tookenkey",
	        value: tooken
	    }]; //请求参数

	    return parameters;
	}

	function pay() {
	    var parms = getParms();

	    CMethod.getUrlAjax(LFQ_ORDER_CREATE_URL, parms, successCallBack, "", true);
	}
	// 请求支付返回数据回调函数
	function successCallBack(zfdata) {
	    $('#loding').modal('hide');

	    // alert(zfdata.ppcs_paywithpassword_add_response.pay_result.resp_desc);
	    var code = zfdata.error_business_response.code;

	    // 支付成功返回码位000，其他均为支付失败
	    if (zfdata.error_business_response && zfdata.error_business_response.code == "0000") { // 
	        pview.setSucceedContent();
	        setHistory("该笔订单已支付");
	    } else if (zfdata.error_business_response && "50,51,52,53".search(zfdata.error_business_response.code) != -1) {
	        pview.showErroPrompt(zfdata.error_business_response.msg);
	        pview.showCardInfo();

	    } else {
	        if(zfdata.code != "0330" && zfdata.code != "0361" && zfdata.code != "0364" && zfdata.code != "0365" && zfdata.code != "0366"){
	          ucookies.setCookie("pmsg", "该笔订单支付失败");  
	        }else{
	          ucookies.setCookie("pmsg", zfdata.error_business_response.msg);  
	        }
	        
	        location.href = "./prompt.html";
	    }
	}

	// 判断页面当前状态 1 支付成功 2：支付失败 3：订单失效 4：订单提交失败
	function initState() {
	    var stateVal = $("#state").val();
	    if (stateVal == "3") {
	        ucookies.setCookie("pmsg", "该笔订单已失效");
	        location.href = "./prompt.html";
	    } else if (stateVal == "1") {
	        ucookies.setCookie("pmsg", "该笔订单已支付");
	        location.href = "./prompt.html";
	    } else if (stateVal == "2") { // 支付失败
	        ucookies.setCookie("pmsg", "该笔订单已失效，请重新下单");
	        location.href = "./prompt.html";
	    }
	}

	// 修改浏览记录
	function setHistory(msg) {
	    ucookies.setCookie("pmsg", msg);
	    history.pushState({
	        title: "支付结果"
	    }, "", "prompt.html");
	}

	// 初始化期数和费率
	function initRate() {
	    var $rateInput = $("#stageNumberBox>input");
	    var rateInputData = $rateInput.data();
	    var defaultStageNumber = $rateInput.val(); //默认期数

	    var optionVal = '';
	    if (rateInputData.array) {
	        var rateArray = rateInputData.array.split(",");
	        var rateArrayObject = JSON.parse($("#stageNumberBox>input").data().array.replace(/'/g, '"'));
	        for (var eachStageNumber in rateArrayObject) {
	            if (/["low"]|["up"]/.test(eachStageNumber)) {
	                continue;
	            }
	            optionVal += '<option value="' + rateArrayObject[eachStageNumber];
	            if (eachStageNumber == defaultStageNumber) {
	                optionVal += '" selected = "true';
	            }
	            optionVal += '">' + eachStageNumber + '期</option>';
	        }

	    }
	    if (rateInputData.rate || rateInputData.rate == 0) {
	        optionVal += '<option value="' + rateInputData.rate + '">' + defaultStageNumber + '期</option>';
	    }

	    $("#rateSelect").html(optionVal);
	}

	// 初始化变量
	function initValue() {
	    initRate();
	    $rateSpan = $("#rateSpan");
	    $rateSelect = $("#rateSelect");
	    if ($rateSelect[0]) {
	        needFeeRate = parseFloat($rateSelect.val());
	        stageNumber = parseInt($rateSelect.find("option:selected").text());
	    } else {
	        needFeeRate = parseFloat($rateSpan.attr("data-rate"));
	        stageNumber = parseFloat($rateSpan.text());
	    }

	}

	// 发送订单金额费率跟后台核实
	function sentOrderInfos() {
	    // nper:期数 eachMoney:每期还款 totalamount:分期总额  orderIddes:订单号 sign:

	    var orderInfos = [{
	        "name": "nper",
	        "value": stageNumber
	    }, {
	        "name": "eachMoney",
	        "value": $("#eachMoney").text()
	    }, {
	        "name": "totalamount",
	        "value": $("#countMoney").text()
	    }, {
	        "name": "orderIddes",
	        "value": $("#orderId").val()
	    }, {
	        "name": "sign",
	        "value": $("#signs").val()
	    }];

	    CMethod.getUrlAjax(LFQ_pcinstallorder_URL, orderInfos, checkOrderInfos);
	}

	// 验证订单信息返回结果
	function checkOrderInfos(cdate) {

	    if (cdate.code == "01") {
	        tooken = cdate.tooken;
	        showFill();
	    } else {
	        ucookies.setCookie("pmsg", cdate.errormsg);
	        location.href = "./prompt.html";
	    }

	}

	// 显示信息填写页面
	function showFill() {
	    pview.showCardInfo();
	    pview.addBadgeChecked(2);
	}

	// 判断到第几步了
	function getStep() {
	    var step = 1;
	    if ($(".cardInfo-header>span:eq(2) .checked")[0]) {
	        step = 3;
	    } else if ($(".cardInfo-header>span:eq(1) .checked")[0]) {
	        step = 2;
	    }

	    return step;
	}

	// 给步骤绑定事件
	function initHeaderSpan() {
	    $(".cardInfo-header>span:eq(1)").on("click", function() {
	        var step = 1;
	        step = getStep();
	        if (step != 3) {
	            sentOrderInfos();
	        }

	    });
	    $(".cardInfo-header>span:eq(0)").on("click", function() {
	        var step = 1;
	        step = getStep();
	        if (step != 3) {
	            pview.showCountBox();
	            pview.addBadgeChecked(1);
	        }

	    });
	    $(".cardInfo-header>span:eq(2)").on("click", function() {
	        var step = 1;
	        step = getStep();
	        if (step == 2) {
	            sureButtonClick();
	        } else {
	            sentOrderInfos();
	        }

	    });

	}

	/* 验证码校验 */
	function verifyCode() {
	    var $this = $(this);
	    var thisVal = $this.val();
	    var newVal = thisVal.replace(/\D/g, "");
	    $this.val(newVal);
	    if ($(this).val().length > 4) {
	        $(this).val($(this).val().substr(0, 4));
	    }
	    if ($(this).val().length == 4) {
	        var parameters = {
	            code: $(this).val()
	        }

	        //验证发送请求后台
	        $.get("/assetbm/rest/card/orderpay/pay", parameters, function(data) {
	            if (data.code == "ok") {
	                // 验证正确时
	                verifyCodeOk();
	            } else {
	                // 验证码错误时
	                noVerfyCode();
	            }
	        });
	    }

	}

	/* 验证码通过提示 */
	function verifyCodeOk() {
	    $("#yzmti").text("验证码验证通过").removeClass("Validform_wrong").addClass("Validform_right");
	}

	/* 验证码错误提示 */
	function noVerfyCode() {
	    $("#yzmti").text("验证码错，请重新输入").removeClass("Validform_right").addClass("Validform_wrong");
	    $("#verifyCode").val("");
	    rvi();
	}


	//请求 验证码
	function getVerifyCode() {
	    $vCodeButton = $("#vCodeButton");
	    var id_no = $("#userId").val().replace(/ /g, "");
	    var isIdNo = isSFZNo(id_no);

	    if ($vCodeButton.hasClass("disabled")) { //60秒之内
	        return;
	    } else { //发送短信 禁用60秒
	        if (!isIdNo) {
	            $("#aboutMoal .modal-body").html("<p>身份证号码错误</p>");
	            $('#aboutMoal').modal({
	                backdrop: "static",
	                keyboard: false
	            }); // 显示提示框
	            return;
	        }
	        //发送短信
	        // 禁用60秒
	        $vCodeButton.addClass("disabled");
	        $vCodeButton.text("重新获取(" + getVerifyCodeDJS + "S)");

	        var setIntervarHandle = setInterval(function() {
	            getVerifyCodeDJS--;
	            $vCodeButton.text("重新获取(" + getVerifyCodeDJS + "s)")
	            if (getVerifyCodeDJS == 0) {
	                $vCodeButton.text("重新获取");
	                clearInterval(setIntervarHandle);
	                $vCodeButton.removeClass("disabled");
	                getVerifyCodeDJS = 60;
	            };
	        }, 1000);

	        getAjaxCode(setIntervarHandle);
	    }
	}


	// 发送验证码请求
	function getAjaxCode(setIntervarHandle) {
	    var url = LFQ_SMS_SEND_URL;
	    var hp_no = $("#userPhone").val().replace(/ /g, "");
	    var id_no = $("#userId").val().replace(/ /g, "");
	    var param = {
	        hp_no: hp_no,
	        orderid: $("#orderId").val(),
	        idno: id_no
	    };
	    CMethod.getUrlAjax(url, param, function(retn) {
	        console.log("验证码请求结果");
	        console.dir(retn);
	        if (retn.code == "0") {
	            $verifyBtn.text("重新获取");
	            $verifyBtn.removeClass("disabled");
	            clearInterval(setIntervarHandle);
	            
	        }
	    });
	}


	// 计算总金额，和每期金额
	function computesEachPayNumber() {
	    var lfq_amt = parseFloat($("#totalNum").text());
	    var contentMonet = parseFloat(lfq_amt * (parseFloat(needFeeRate) / 100) + 0.00001 + lfq_amt).toFixed(2);
	    var eachMoney = num.hold2bit(parseFloat(lfq_amt) * (1 + needFeeRate / 100) / stageNumber);
	    var eachPrincipal = num.hold2bit(lfq_amt / stageNumber);
	    var eachFeeNum = parseFloat(eachMoney) - parseFloat(eachPrincipal);
	    var eachFee = needFeeRate / stageNumber;
	    var allFeeValue = num.hold2bit(contentMonet - lfq_amt);

	    $("#allFeeNum").text(allFeeValue);
	    $("#eachRate").text(eachFee.toFixed(2) + '%');
	    $("#eachFeeNum").text(eachFeeNum.toFixed(2));
	    $("#eachMoney").text(eachMoney);
	    $("#countMoney").text(contentMonet);
	}

	//  分期数选择改变
	function rateSelectChange() {
	    needFeeRate = parseFloat($rateSelect.val());
	    stageNumber = parseInt($rateSelect.find("option:selected").text());
	    computesEachPayNumber();
	}

	// 银行卡事件
	function initCreditCard() {
	    $("#creditCard").keyup(function() {
	        var numberVal = $(this).val().replace(/[^0-9\s]/g, "");
	        $(this).val(numberVal);
	        pview.spaceCardNum();
	    });
	}

	// 身份证输入框事件
	function initUserIdEvent() {
	    $("#userId").keyup(function() {
	        $userId = $(this);
	        var useIdVal = $userId.val().replace(/[^0-9xX\s]/g, "");
	        $userId.val(useIdVal);
	        pview.spaceuserId($userId);
	    })
	}

	// cvn2输入框事件
	function initCvn2Event() {
	    $("#cvn2").keyup(function() {
	        if ($(this).val().length > 3) {
	            $(this).val($(this).val().substr(0, 3));
	        }
	    })
	}

	// 手机输入事件
	function initPhoneEvent() {
	    $("#userPhone").keyup(function() {
	        $phone = $(this);
	        var phoneVal = $phone.val().replace(/[^0-9\s]/g, "");
	        $phone.val(phoneVal);
	        pview.spacePhoneNum($phone);
	    });
	}

	// 有效期
	function initSelectMonth() {
	    var $datePicker = pview.setDatetimepicker();
	    $('.form_month').datetimepicker('setStartDate', new Date());
	    $datePicker.on("changeMonth", function(ev) {
	        var nowDate = new Date();
	        var year2 = String(ev.date.getFullYear()).substr(2, 2);
	        var months = ev.date.getMonth() > 8 ? ev.date.getMonth() + 1 : '0' + (ev.date.getMonth() + 1);
	        exp = months + year2;

	        if (ev.date.getFullYear() < nowDate.getFullYear() || (ev.date.getFullYear() == nowDate.getFullYear() && ev.date.getMonth() < nowDate.getMonth())) {

	            $("#timeCheckTip").text("信用卡已过期").removeClass("Validform_right").addClass("Validform_wrong");
	        } else {
	            rexp = true;
	            $("#timeCheckTip").text("通过信息验证").removeClass("Validform_wrong").addClass("Validform_right");

	        }
	    });
	}

	// 取得判断浏览器版本
	function getBrowserInfo() {
	    var iebh = "no";
	    var regStr_ie = /msie [\d.]+;/gi;
	    var regStr_ff = /firefox\/[\d.]+/gi
	    var regStr_chrome = /chrome\/[\d.]+/gi;
	    var regStr_saf = /safari\/[\d.]+/gi;

	    var agent = navigator.userAgent.toLowerCase();
	    //IE
	    if (agent.indexOf("msie") > 0) {
	        iebh = agent.match(regStr_ie);
	    }

	    if (iebh != "no" && parseInt(iebh[0].replace("msie ", "")) < 9) {
	        alert("ie浏览器版本太低,请升级到9或以上版本");
	        location.href = "./prompt.html?msg=ie浏览器版本太低,请升级到9或以上版本。"
	    }
	}



	// 设置只读
	function setReadOnly() {
	    var readVal = $("#onlyData").val();
	    var readIvalA = [{
	        name: "creditName",
	        value: "userName"
	    }, {
	        name: "cetitype",
	        value: ""
	    }, {
	        name: "creditNo",
	        value: "creditCard",
	        fun: pview.spaceCardNum
	    }, {
	        name: "idno",
	        value: "userId",
	        fun: pview.spaceuserId
	    }, {
	        name: "phoneNo",
	        value: "userPhone",
	        fun: pview.spacePhoneNum
	    }];
	    for (var i = 0, l = readIvalA.length; i < l; i++) {
	        if (readVal.search(readIvalA[i].name) != -1) {
	            $("#" + readIvalA[i].value).attr("readonly", "readonly");
	            if (readIvalA[i].fun) {
	                readIvalA[i].fun();
	            }
	        }
	    }
	}


	// 验证身份证格式
	function isSFZNo(card) {
	    var iscarNum = true;
	    // 身份证号码为15位或者18位，15位时全为数字，18位前17位为数字，最后一位是校验位，可能为数字或字符X  
	    var reg = /(^\d{15}$)|(^\d{18}$)|(^\d{17}(\d|X|x)$)/;
	    if (reg.test(card) === false) { //身份证输入不合法
	        iscarNum = false;
	    }

	    return iscarNum;
	}

	// 设置返回商城地址
	function setBackUrl () {
	    var scUrl = $("#urlrerurn").val();
	    if(scUrl && scUrl != "null" && scUrl != ""){
	       $("#paySucceed a").attr("href",scUrl);
	    }
	}

	// 到计时 30 分钟后跳转到订单失效页面
	function countDownTime() {
	    var oldTime = (new Date()).getTime();
	    var countDownhadle = setInterval(function() {
	        var newTime = (new Date()).getTime();
	        if (newTime - oldTime > 1790000) {
	            clearInterval(countDownhadle);
	            location.href = "./prompt.html?msg=该笔订单已失效，请重新下单";
	        }
	    }, 1000);
	}

/***/ },
/* 1 */
/***/ function(module, exports) {

	//查看卡内余额
	function selectBalance(e) {
	    var balanceHTML = '<p>您的卡内余额：' + 200.00 + '元</p>';
	    $('#aboutMoal h4').text("查看卡内余额");
	    $('#aboutMoal .modal-body').html(balanceHTML);
	    $('#aboutMoal modal-footer > button').text('确定');
	    $('#aboutMoal').modal('show');
	}

	// 隐藏标签
	function addClassHide(selectors) {
	    for (var i = 0, l = selectors.length; i < l; i++) {
	        $(selectors[i]).addClass("hide");
	    }
	}

	/* 支付请求等待提示 */
	function showZhifuTishi() {
	    addClassHide(["#cardInfo", "#paySucceed", "#countBox"]);
	    $('#zhifuzhongtishu').removeClass("hide");
	}

	// 显示卡信息
	function showCardInfo() {
	    addClassHide(["#zhifuzhongtishu", "#paySucceed", "#countBox"]);
	    $("#cardInfo").removeClass("hide");

	}

	// 显示测算栏
	function showCountBox() {
	    addClassHide(["#zhifuzhongtishu", "#paySucceed", "#cardInfo"]);
	    $("#countBox").removeClass("hide");
	}

	/* 支付成功 */
	function showPaySucceed(payNum) {
	    addClassHide(["#zhifuzhongtishu", "#cardInfo", "#countBox"]);
	    $('#paySucceed').removeClass('hide');
	    $('.cardInfo-header .badge').addClass('checked');
	    countdownFun();
	}

	/* 设置成功提示 */
	function setSucceedContent() {
	    var scUrl = $("#urlrerurn").val();
	    if (scUrl == "null" || scUrl == "") {
	        $("#paySucceed p:gt(0)").hide();
	    }
	    $("#paySucceed .icon-fail").removeClass("icon-fail").addClass("icon-chenggong");
	    $("#paySucceedNum").text($("#countMoney").text());
	    $("#payFinally").text("您已成功付款");
	    $("#payFinally+span").show();
	    showPaySucceed();
	}
	/* 设置失败提示 */
	function setFailContent() {
	    $("#paySucceed .icon-chenggong").removeClass("icon-chenggong").addClass("icon-fail");
	    $("#payFinally").text("支付失败");
	    $("#payFinally+span").hide();
	    showPaySucceed();
	}

	// 点亮前两步骤图标
	function addBadgeChecked(stepNum) {
	    $badge = $('.cardInfo-header .badge');
	    for (var i = 0, l = $badge.length; i < l; i++) {
	        if (i < stepNum) {
	            $($badge[i]).addClass("checked");
	        } else {
	            $($badge[i]).removeClass("checked");
	        }
	    }
	}

	// 倒计时
	function countdownFun(argument) {
	    var cardNum = 10;
	    var setIntervalObje = setInterval(function cd10() {
	        cardNum--;
	        $('#countdown10').text(cardNum);
	        if (cardNum == 0) {
	            location.href = $("#paySucceed a").attr("href");
	            clearInterval(setIntervalObje);
	            var scUrl = $("#urlrerurn").val();
	            if (scUrl && scUrl != "null" && scUrl != "") {
	              location.href = $("#urlrerurn").val();  
	            }
	            
	        };
	    }, 1000)
	}

	/* 展示错误提示框 */
	function showErroPrompt(msg) {
	    var promptHTML = '<p>' + msg + '</p>';

	    $('#aboutMoal h4').text("提示");
	    $('#aboutMoal .modal-body').html(promptHTML);
	    $('#aboutMoal modal-footer > button').text('确定');
	    $('#aboutMoal').modal('show');

	}

	/* 输入框输入去掉提示颜色 */
	function changeInputColor($input) {
	    if ($input.val() != "") {
	        $input.removeClass("tishu-color9");
	    }
	}

	// 初始化格式
	function initSpace() {
	    if ($("#creditCard").val() != "") {
	        spaceCardNum();
	    }
	    if ($("#userId").val() != "") {
	        spaceuserId($("#userId"));
	    }
	    if ($("#userPhone").val() != "") {
	        spacePhoneNum($("#userPhone"));
	    }
	}


	/* 间隔信用卡号 */
	function spaceCardNum() {
	    $creditCard = $("#creditCard"),
	        creditCardVal = $creditCard.val(),
	        needCardVal = $creditCard.val().replace(/ /g, "");
	    if (needCardVal.length > 4 && needCardVal.length < 9) {
	        creditCardVal = needCardVal.substr(0, 4) + "  " + needCardVal.substr(4);
	        $creditCard.val(creditCardVal);
	    } else if (needCardVal.length > 8 && needCardVal.length < 13) {
	        creditCardVal = needCardVal.substr(0, 4) + "  " + needCardVal.substr(4, 4) + "  " + needCardVal.substr(8);
	        $creditCard.val(creditCardVal);
	    } else if (needCardVal.length > 13 && needCardVal.length < 17) {
	        creditCardVal = needCardVal.substr(0, 4) + "  " + needCardVal.substr(4, 4) + "  " + needCardVal.substr(8, 4) + "  " + needCardVal.substr(12);
	        $creditCard.val(creditCardVal);
	    }

	}

	/* 间隔身份证号 */
	function spaceuserId($userId) {
	    var userIdVal = $userId.val(),
	        needUserIdVal = $userId.val().replace(/ /g, "");
	    if (needUserIdVal.length > 7 && needUserIdVal.length < 15) {
	        userIdVal = needUserIdVal.substr(0, 6) + "  " + needUserIdVal.substr(6);
	        $userId.val(userIdVal);
	    } else if (needUserIdVal.length > 14) {
	        userIdVal = needUserIdVal.substr(0, 6) + "  " + needUserIdVal.substr(6, 8) + "  " + needUserIdVal.substr(14);
	        $userId.val(userIdVal);
	    }

	}

	/* 间隔手机号 */
	function spacePhoneNum($userPhone) {
	    var userPhoneVal = $userPhone.val(),
	        needPhoneVal = $userPhone.val().replace(/ /g, "");
	    if (needPhoneVal.length > 3 && needPhoneVal.length < 9) {
	        userPhoneVal = needPhoneVal.substr(0, 3) + "  " + needPhoneVal.substr(3);

	    } else if (needPhoneVal.length > 8) {
	        userPhoneVal = needPhoneVal.substr(0, 3) + "  " + needPhoneVal.substr(3, 4) + "  " + needPhoneVal.substr(7);
	    }
	    $userPhone.val(userPhoneVal);
	}

	// 初始化提示插件
	function initValidform() {
	    return $(".demoform").Validform({
	        tiptype: 2,
	        datatype: {
	            "zh2-15": /^[\u4E00-\u9FA5\uf900-\ufa2d]{2,8}$/,
	            "xk16": /[0-9]{4}\s\s[0-9]{4}\s\s[0-9]{4}\s\s[0-9]{4}$/,
	            "sfz": /[0-9]{6}\s\s[0-9]{8}\s\s[0-9]{3}[0-9Xx]$/,
	            "sjh": /[0-9]{3}\s\s[0-9]{4}\s\s[0-9]{4}$/
	        }
	    });
	}

	// 实例化日历控件
	function setDatetimepicker() {
	    $.fn.datetimepicker.dates['zh'] = {
	        days: ["星期日", "星期一", "星期二", "星期三", "星期四", "星期五", "星期六", "星期日"],
	        daysShort: ["日", "一", "二", "三", "四", "五", "六", "日"],
	        daysMin: ["日", "一", "二", "三", "四", "五", "六", "日"],
	        months: ["一月", "二月", "三月", "四月", "五月", "六月", "七月", "八月", "九月", "十月", "十一月", "十二月"],
	        monthsShort: ["一月", "二月", "三月", "四月", "五月", "六月", "七月", "八月", "九月", "十月", "十一月", "十二月"],
	        meridiem: ["上午", "下午"],
	        //suffix:      ["st", "nd", "rd", "th"],  
	        today: "今天"
	    };


	    var $datePicker = $('.form_month').datetimepicker({
	        //        language: 'fr',
	        language: 'zh',
	        weekStart: 1,
	        autoclose: 1,
	        startView: 3,
	        minView: 3,
	        forceParse: 0
	    });
	    return $datePicker;
	}



	/* 设置订单信息 
	function setOrderIfo(orderIfo) {
	    if (orderIfo.payments) { // 订单金额
	        $("#totalNum").text(orderIfo.payments + '元');
	    }
	    if (orderIfo.orderNum) { // 订单号
	        $("#orderNum").text(orderIfo.orderNum);
	    }
	    if (orderIfo.orderTime) { // 订单时间
	        $("#payDate").text(orderIfo.orderTime);
	    }
	    if (orderIfo.commodityName) { // 订单时间
	        $("#commodityName").text(orderIfo.commodityName);       
	    }
	}
	*/
	// 不打包形式  要加载requrie.js
	/*require.register("../views/paymentView.js", function(module, exports, require) {
	    module.exports = {
	        selectBalance: selectBalance,
	        showZhifuTishi: showZhifuTishi,
	        showCardInfo: showCardInfo,
	        showPaySucceed: showPaySucceed,
	        showErroPrompt: showErroPrompt,
	        changeInputColor: changeInputColor,
	        setSucceedContent: setSucceedContent,
	        setFailContent: setFailContent
	            // setOrderIfo: setOrderIfo
	    };
	});
	*/

	// 打包形式
	module.exports = {
	    selectBalance: selectBalance,
	    showCountBox: showCountBox,
	    showZhifuTishi: showZhifuTishi,
	    showCardInfo: showCardInfo,
	    showPaySucceed: showPaySucceed,
	    showErroPrompt: showErroPrompt,
	    changeInputColor: changeInputColor,
	    setSucceedContent: setSucceedContent,
	    setFailContent: setFailContent,
	    addBadgeChecked: addBadgeChecked,
	    spaceCardNum: spaceCardNum,
	    spaceuserId: spaceuserId,
	    spacePhoneNum: spacePhoneNum,
	    initValidform: initValidform,
	    setDatetimepicker: setDatetimepicker,
	    initSpace: initSpace
	}

/***/ },
/* 2 */,
/* 3 */
/***/ function(module, exports) {

	// 清除"数字"和"."以外的字符
	function clearNoNum(obj) {
	    obj.value = parseFloat(obj.value.replace(/[^\d.]/g, "")); //清除"数字"和"."以外的字符
	    obj.value = obj.value.replace(/^\./g, ""); //验证第一个字符是数字而不是
	    obj.value = obj.value.replace(/\.{2,}/g, "."); //只保留第一个. 清除多余的
	    obj.value = obj.value.replace(".", "$#$").replace(/\./g, "").replace("$#$", ".");
	    obj.value = obj.value.replace(/^(\-)*(\d+)\.(\d\d).*$/, '$1$2.$3'); //只能输入两个小数
	}

	// 把输入的大于可输入的最大值时，替换成最大值
	function monreMax(obj, max) {
	    inputValue = obj.value;
	    if (parseFloat(inputValue) > parseFloat(max)) {
	        obj.value = max;
	    }
	}

	// 保留两位小数
	function input2bit(obj) {
	    if (obj.value.search(/\.\d{3,}/) != -1) {
	        clearNoNum(obj);
	    }
	}

	// 禁止数字和.以外的字符输入
	function deleteNoNumber(obj) {
	    var reg = /[^\d.]/;
	    if (reg.test(obj.value) || obj.value == "") {
	        obj.value = obj.value.replace(/[^\d.]/g, "");
	    }
	}

	// 截取两位小数
	function hold2bit(theNum) {
	    var theNum2bit = String(theNum);
	    if(String(theNum).match(/[0-9,]{0,}\.\d\d/)){
	        theNum2bit = String(theNum).match(/[0-9,]{0,}\.\d\d/)[0];
	    }else if(String(theNum).match(/[0-9,]{0,}\.\d/)){
	        theNum2bit += '0';
	    }else if(String(theNum).match(/[0-9,]{0,}\./)){
	        theNum2bit += '00';
	    }else if(String(theNum).match(/[0-9,]{0,}/)){
	        theNum2bit += '.00';
	    }
	    return theNum2bit;
	}



	// 打包形式

	module.exports = {
	    clearNoNum: clearNoNum,
	    monreMax: monreMax,
	    input2bit: input2bit,
	    deleteNoNumber: deleteNoNumber,
	    hold2bit: hold2bit
	}

/***/ }
]);